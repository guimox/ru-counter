name: Build and Deploy Go API

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and Deploy Go API
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Push Multi-Architecture Docker Image to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}/${{ secrets.DOCKER_CONTAINER_NAME }}:v1.0.0
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create app directory on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_IP_ADDRESS }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            if [ ! -d "/home/${{ secrets.VPS_USERNAME }}/apps/ru-counter" ]; then
              mkdir -p /home/${{ secrets.VPS_USERNAME }}/apps/ru-counter
            fi

      - name: Upload docker-compose-prd.yml
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP_ADDRESS }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "docker-compose-prd.yml"
          target: "/home/${{ secrets.VPS_USERNAME }}/apps/ru-counter/"

      - name: Create .env file on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_IP_ADDRESS }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd /home/${{ secrets.VPS_USERNAME }}/apps/ru-counter
            cat > .env << EOF
            APP_PORT=${{ secrets.APP_PORT }}
            DOCKER_CONTAINER_NAME=${{ secrets.DOCKER_CONTAINER_NAME }}
            GITHUB_REPOSITORY=${{ github.repository }}
            NUMBER_NEWSLETTERS=${{ secrets.NUMBER_NEWSLETTERS }}
            NEWSLETTER_JID1=${{ secrets.NEWSLETTER_JID1 }}
            NEWSLETTER_NAME1=${{ secrets.NEWSLETTER_NAME1 }}
            NEWSLETTER_JID2=${{ secrets.NEWSLETTER_JID2 }}
            NEWSLETTER_NAME2=${{ secrets.NEWSLETTER_NAME2 }}
            NEWSLETTER_JID3=${{ secrets.NEWSLETTER_JID3 }}
            NEWSLETTER_NAME3=${{ secrets.NEWSLETTER_NAME3 }}
            NEWSLETTER_JID4=${{ secrets.NEWSLETTER_JID4 }}
            NEWSLETTER_NAME4=${{ secrets.NEWSLETTER_NAME4 }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            GITHUB_OWNER=${{ secrets.GITHUB_OWNER }}
            GITHUB_REPO=${{ secrets.GITHUB_REPO }}
            EOF
            chmod 600 .env

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_IP_ADDRESS }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            echo "${{ secrets.PAT_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            cd /home/${{ secrets.VPS_USERNAME }}/apps/ru-counter
            docker pull ghcr.io/${{ github.repository }}/${{ secrets.DOCKER_CONTAINER_NAME }}:v1.0.0
            docker compose -f docker-compose-prd.yml down --remove-orphans
            docker compose -f docker-compose-prd.yml up -d --force-recreate --remove-orphans
            docker image prune -f
